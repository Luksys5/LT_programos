#!/usr/bin/python
import os
import os.path
import sys
import re	
import random 
import math


## DistacnceByZValues is using DaliLite
## This script is to Convert Z-Values to distance and write ir sorted to file
class DistanceByZvalues(object):
    def __init__(self):
        self.fhZVal = open("Zvalues", 'w')
        self.fhPvalTable = open("PvalTable", 'w')

        self.dPnamevalues = {}

        self.lZvalues = []
        self.lDistances = []
        self.lAlignNames = []
        self.lPdbCodes = []
        self.lPdbModels = []

        self.nPdbsCount = 0
        self.nCodeLength = 6

        self.OrigPath = os.getcwd()
        self.DaliPath = sys.argv[1] #"/home/l_/DaliLite_3.3/DaliLite"
        self.ListOfModelsPaths = sys.argv[2] #"/home/l_/Darbai/Bakalaurinis/dali_align/model_list"
        self.PdbModelPath = sys.argv[3] #"/home/l_/Darbai/Bakalaurinis/model_diffs/model_pdb/"

    def Read(self):
        i = 0
        with open(self.ListOfModelsPaths, 'r') as f:
            for strPdbModel in f:
                strPdbModel = strPdbModel.rstrip("\n")
                self.lPdbModels.append(strPdbModel)
                self.lPdbCodes.append(strPdbModel[:self.nCodeLength])
                i += 1
                if(i > 2): break
        ## Changing directory after reading 
        os.chdir(sys.argv[4]) ## Dali Output directory path. BIN file from DaliLite Must be included!! 

    def DaliAlignEach(self):
        for i, strFirstPdbModel in enumerate(self.lPdbModels):
            for strSecondPdbModel in self.lPdbModels[i + 1:]:
                if(strSecondPdbModel != strFirstPdbModel):
                    strSecondCode = strSecondPdbModel[:6]
                    self.lAlignNames.append((self.lPdbCodes[i], strSecondCode))
                    nZvalue = self.GetZValue(strFirstPdbModel, strSecondPdbModel)
                    self.lZvalues.append(nZvalue)
                  
                    nPvalue = round(1.0 / float(nZvalue), 5)
                    self.dPnamevalues[(self.lPdbCodes[i], strSecondCode)] = nPvalue
                    self.dPnamevalues[(strSecondCode, self.lPdbCodes[i])] = nPvalue


    def GetZValue(self, pdb1, pdb2):
        print "Starting to align: " + pdb1 + ' ' + pdb2
        #print self.DaliPath + " -pairwise " + self.PdbModelPath + pdb1 +\
        #        ' ' + self.PdbModelPath + pdb2
        os.system(self.DaliPath + " -pairwise " + self.PdbModelPath + pdb1 + 
        ' ' + self.PdbModelPath + pdb2 + " > Daliout 2> Dalierr")

        if not os.path.isfile("mol1A.txt"):
            return 0.0
                
        with open("mol1A.txt") as fmol:
            fmline = fmol.readline().rstrip("\n")
            if re.match(".*Query.*", fmline):
                fmol.readline()
                fmline = fmol.readline()
                nZvalue = fmline[14:18]
                if not nZvalue:
                    nZvalue = 0.0
            else:
                print "Stopping, no query at mol1" + ch + ".txt"
                sys.exit(1)

        return float(nZvalue)

    def ZValueToDist(self):
        nMaxValue = 0.0
        for nZvalue in self.lZvalues:
            if(nZvalue > nMaxValue):
                nMaxValue = nZvalue

        nMaxValue += 1.0
        for nZvalue in self.lZvalues:
            self.lDistances.append(nMaxValue - nZvalue)

    def ZValueToPvalue(self):
        fPval = 0.0
        for i, val in enumerate(self.lZvalues):
            fPval = round(1.0 / float(val), 5)
            self.dPnamevalues[(
                self.lAlignNames[i][0], 
                self.lAlignNames[i][1] )] = fPval
            
            self.dPnamevalues[(
                self.lAlignNames[i][1], 
                self.lAlignNames[i][0] )] = fPval

    def WritePvalTable(self):
        self.fhPvalTable.write(' ' * 5 + "\t")
        for strKey in self.lPdbModels:
            self.fhPvalTable.write("\t" + strKey[:6] + ' ' * 2)
        self.fhPvalTable.write("\n")
        
        for strFirstCode in self.lPdbCodes:
            self.fhPvalTable.write(strFirstCode)
            for strSecondCode in self.lPdbCodes:
                strPval = "0.0\t"
                if(strFirstCode != strSecondCode):
                    strPval = str(self.dPnamevalues[(strFirstCode, strSecondCode)])
                self.fhPvalTable.write("\t\t" + strPval)
            self.fhPvalTable.write("\n")

    def SortDistancesAscending(self):
        strTempKey = ""
        nTempValue = 0.0
        for i in range(self.nPdbsCount):
            for j in range(self.nPdbsCount):
                if(self.lDistances[j] > self.lDistances[i]):
                    strTempKey = self.lAlignNames[i]
                    self.lAlignNames[i] = self.lAlignNames[j]
                    self.lAlignNames[j] = strTempKey

                    nTempValue = self.lDistances[j]
                    self.lDistances[j] = self.lDistances[i]
                    self.lDistances[i] = nTempValue



    def WriteDistInfo(self):
        for i in range(len(self.lZvalues)):
            self.fhZVal.write(
                    self.lAlignNames[i][0] + "\t" + \
                    self.lAlignNames[i][1] + "\t" + \
                    "protein-protein" + "\t" + \
                    str(self.lDistances[i]) + "\n"      
            )


    
    def __enter__(self):
        return self

    def __exit__(self, exc_type, exc_value, traceback):
        print "OnExit"
        self.fhZVal.close()
        self.fhPvalTable.close()
        os.chdir(self.OrigPath)
    

if(__name__ == "__main__"):
    if(len(sys.argv) < 5 or sys.argv[1].startswith("-h")):
        print "./DistanceByZvalues input1 input2 input3 input4"
        print "input1 - full path of Dali Executable file"
        print "input2 - file where pdb model names are listed"
        print "input3 - full path of model pdb"
        print "input4 - path to the directory where Dali Excetuable should output. DaliLite's BIN folder must be included in that directory\n"

        print "Example: ./DistanceByZvalues /home/user/DaliLite3_3/DaliLite modelsList /home/user/models_pdb/ dali_out"
        print "Example: ./DistanceByZvalues /home/user/DaliLite3_3/DaliLite /home/user/modelsList /home/user/models_pdb/ /home/user/dali_out"
        sys.exit(1)
    
    with DistanceByZvalues() as DistZ:
        DistZ.Read()
        DistZ.DaliAlignEach()
        DistZ.ZValueToDist()
        DistZ.SortDistancesAscending()
        DistZ.WriteDistInfo()
        DistZ.ZValueToPvalue()
        DistZ.WritePvalTable()
