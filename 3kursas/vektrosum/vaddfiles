#!/usr/bin/perl
#-------------------------------
#$Author: Lukas_Tutkus $
#$Date: 2015-02-23 21:04:05 +0200 (Pr, 23 Vas 2015) $
#$Revision: 54 $
#$URL: svn://saulius-grazulis.lt/praktikos-darbai-2015/Lukas_Tutkus/trunk/vaddfiles $
#$Id: vaddfiles 104 2015-03-10 18:54:06Z Lukas_Tutkus $
#-------------------------------
#*
#	Perl script which reads input and check sum of vectors and outputs it to STDOUT.
#*
use Scalar::Util qw(looks_like_number); ## Subroutine for checking if char is numeric.
use strict;
use warnings;

my $Master = '#$Id: vaddfiles 104 2015-03-10 18:54:06Z Lukas_Tutkus $'."\n";
print $Master;

my @strings = ("");
my $maxlength = 0;

my $fname = @ARGV > 0 ? shift(@ARGV) : "-";
open my $fh, $fname or die "Dying becouse can't open file: $fname $!";
lcfirst($!);

## Reading from file
while( my $line = <$fh> ) {
	chomp($line);
	my $LEN = length($line);
	if ($maxlength < $LEN){$maxlength=$LEN;}
	push @strings, "$line";
}
close($fh);

## Spliting Line into characters
while(@strings){
	my $suma = 0;
	my $count = 0;
	my $mystr = pop(@strings);

	$mystr =~ s/^\s+//g; ## Checking for whitespace.
	$mystr =~ s/^\\r+//g;
	$mystr =~ s/ +/ /g;    ## Multiple spaces is substituted by one.
	$mystr =~ s/\t/ /g; ## Tabs are replaced by space.

	if($mystr eq ""){
		print "";
	}else{
		my @values = split(" ",$mystr);
        	foreach my $char (@values){

			### Checking if $char is number type 
			if(looks_like_number($char)){
				$count = $count + 1;
				$suma = $suma + $char;	
			}else{
				die "Given char is not number."
			}
		}
		
		## Checking if number quantity is even.
		if (($count % 2) != 0 ){
			die "Duotas nelyginis komponenčių skaičius: $count";
		}else{	
			print "$mystr suma: $suma\n";
		}
	}
}	
