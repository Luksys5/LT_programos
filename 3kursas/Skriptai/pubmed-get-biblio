#! /bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------------
#$Author: saulius $
#$Date: 2015-02-27 15:34:25 +0200 (Pn, 27 Vas 2015) $ 
#$Revision: 488 $
#$URL: svn://saulius-grazulis.lt/scripts/pubmed-get-biblio $
#------------------------------------------------------------------------------
#*
#  Fetch bibliography from PubMed using various criteria.
#**

use strict;
use warnings;
binmode STDOUT, ':utf8';

use File::Basename;

use LWP::UserAgent;
use LWP::Simple;
use HTTP::Request;
use HTTP::Headers;

use SOptions;
use SUsage;

my $journal;
my $volume;
my $issue;
my $start_page;
my $year;
my $text;
my $title;
my @authors;
my $first_author;
my $last_author;
my $author_separator = ";";
my $script = 0;
my $doi;

#** OPTIONS:

#** -a,--author
#** -A,--all-authors
#** --add-author
#** -C,--clear-authors
#** -I,--id
#** --doi
#** -s,--separator
#** -1,--first-author
#** -l,--last-author
#** -j,--journal
#** -v,--volume
#** -i,--issue
#** -p,--page
#** --start-page
#** -t,--title
#** -T,--text
#** -y,--year
#**
#** -d,--domain
#** -u,--user
#**     Options -u and -d is accepted for compatibility with
#**     'crossref-get-biblio' but they are ignored:
#**
#** --script
#** --run
#** --help,--usage


my $query_url = "http://eutils.ncbi.nlm.nih.gov/entrez/eutils";

@ARGV = getOptions( 
    "-a,--author"        => sub{ @authors = ( get_value() ) },
    "-A,--all-authors"   => sub{ @authors = split( $author_separator, get_value()) },
    "--add-author"       => \@authors,
    "-C,--clear-authors" => sub{ @authors = () },
    # Options -u and -d is accepted for compatibility with
    # 'crossref-get-biblio' but they are ignored:
    "-d,--domain"        => sub{},
    "-I,--id"            => \$doi,
    "--doi"              => \$doi,
    "-s,--separator"     => \$author_separator,
    "-1,--first-author"  => sub{ $first_author = get_value() },
    "-l,--last-author"   => sub{ $last_author = get_value() },
    "-j,--journal"       => sub{ $journal = get_value() },
    "-v,--volume"        => sub{ $volume = get_value() },
    "-i,--issue"         => sub{ $issue = get_value() },
    "-p,--page"          => sub{ $start_page = get_value() },
    "--start-page"       => sub{ $start_page = get_value() },
    "-t,--title"         => sub{ $title = get_value() },
    "-T,--text"          => sub{ $text = get_value() },
    "-u,--user"          => sub{},
    "-y,--year"          => sub{ $year = get_value() },
    "--script"           => sub{ $script = 1 },
    "--run"              => sub{ $script = 0 },
    "--help,--usage" => sub { SUsage::usage; exit },
);

my $term = "";

if( @authors ) {
    $term .= join( " AND ", map { "\"" . $_ . "\"\[AU\]" } @authors );
}

if( defined $first_author ) {
    $term .= " AND " if $term;
    $term .= "\"$first_author\"\[1AU\]";
}

if( defined $last_author ) {
    $term .= " AND " if $term;
    $term .= "\"$last_author\"\[LASTAU\]";
}

if( defined $journal ) {
    $term .= " AND " if $term;
    $term .= "\"$journal\"\[TA\]";
}

if( defined $title ) {
    $term .= " AND " if $term;
    $term .= "\"$title\"\[TI\]";
}

if( defined $text ) {
    $term .= " AND " if $term;
    $term .= "\"$text\"\[TW\]";
}

if( defined $volume ) {
    $term .= " AND " if $term;
    $term .= "\"$volume\"\[VI\]";
}

if( defined $issue ) {
    $term .= " AND " if $term;
    $term .= "\"$issue\"\[IP\]";
}

if( defined $doi ) {
    $term .= " AND " if $term;
    $term .= "\"$doi\"\[AID\]";
}

if( defined $start_page ) {
    $term .= " AND " if $term;
    $term .= "\"$start_page\"\[PG\]";
}

if( defined $year ) {
    $term .= " AND " if $term;
    $term .= "\"$year\"\[DP\]";
}

if( !$term ) {
    die "no search terms -- you probably do not want to download the whole " .
	"PubMed, do you?"
}

my $query = "$query_url/esearch.fcgi?db=pubmed&term=" . $term;

if( $script ) {
    print $query, "\n";
} else {

    my $esearch_result = get( $query );

    ## print $esearch_result;

    if( $esearch_result =~ m|<Id>(\d+)</Id>| ) {
    my $separator = "";
    my $ids = "";
    while( $esearch_result =~ s|<Id>(\d+)</Id>|| ) {
        ## print $id, "\n";
        $ids .= $separator . $1;
        $separator = ",";
    }
    $query = "$query_url/efetch.fcgi?" .
        "db=pubmed&tool=$0&email=grazulis\@ibt.lt&id=$ids&retmode=xml";
    $esearch_result = get( $query );
    print $esearch_result, "\n";
    } else {
    print STDERR "$0: Id for '$term' not found in Medline\n";
    }
}
