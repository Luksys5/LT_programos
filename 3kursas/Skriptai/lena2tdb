#!/bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;

use strict;

sub fold
{
    my $length = shift;
    my $separator = shift;
    my $string = shift;
    my @lines = ();
    my $line = "";

    my $ors = $separator =~ /\s/ ? $separator : "$separator ";
    my $word;
    for $word (split( $separator, $string )) {
	$word =~ s/^\s*|\s*$//g;
	if( !$line ) {
	    $line = $word;
	} else {
	    my $new_line = "$line$ors$word";
	    if( length($new_line) < $length ) {
		$line = $new_line;
	    } else {
		push( @lines, $line );
		$line = $word;
	    }
	}
    }
    push( @lines, $line );
    return @lines;
}

$/ = "\r";
my @record = ();

while (<>) {
    chomp;
    push( @record, $_ );
    next unless /^\s*$/ or eof;
    do{ @record = (); next } if @record < 2;

    @record = ( @record[0..3], join( " ", @record[4..$#record]));

    print "NR\t$record[0]\n";
    print "AU\t$record[2]\n";
    print "AU\t$record[3]\n" if $record[3] ne $record[2];
    print "TI\t\n";

    my @journal = split( ",", $record[1] );
    $journal[0] =~ s/^\s*|\s*$//g;
    print "JO\t$journal[0]\n"; shift( @journal );
    $journal[0] =~ s/^\s*|\s*$//g; 
    print "YE\t$journal[0]\n"; shift( @journal );
    if( $journal[0] =~ /^\s*v\./ ) {
	$journal[0] =~ s/^\s*v\.//;
	$journal[0] =~ s/^\s*|\s*$//g;
	print "VO\t$journal[0]\n";
	shift( @journal );
    }
    if( $journal[0] =~ /^\s*n\./ ) {
	$journal[0] =~ s/^\s*n\.//;
	$journal[0] =~ s/^\s*|\s*$//g;
	print "NO\t$journal[0]\n";
	shift( @journal );
    }
    if( $journal[0] =~ /^\s*p\./ ) {
	$journal[0] =~ s/^\s*p\.//;
	$journal[0] =~ s/^\s*|\s*$//g;
	print "PA\t$journal[0]\n";
	shift( @journal );
    }

    ## print "JO\t$record[1]\n";

    $record[4] =~ s/\r/ /g;
    print map {"KW\t$_\n"} fold( 70, " ", $record[4] );
    print "\n";

    @record = ();
}


