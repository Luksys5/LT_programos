#! /bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------------
#$Author: saulius $
#$Date: 2015-03-04 10:05:45 +0200 (Tr, 04 Kov 2015) $ 
#$Revision: 502 $
#$URL: svn://saulius-grazulis.lt/scripts/mkbibentry $
#------------------------------------------------------------------------------
#*
#  Generate a list of BibTeX entries from the file names provided on
#  the command line.
#
#  Usage:
#      mkbibentry filename1.pdf filename2.ps 2010_Author_123.pdf
#**

use strict;
use warnings;

use File::Basename;

my $date = `date +%Y.%m.%d`;

chomp $date;

for my $filename (@ARGV) {
    my ( $author, $year, $page, $url, $keywords, $title );
    my $filetype = "";

    my $url_file = $filename . ".url";
    if( -f $url_file ) {
        open( URLIN, $url_file ) or
            warn( "can not open URL file '$url_file' for reading - " . 
                  lcfirst($!) );
        $url = join( "", map {chomp;$_} grep !/^#|^\s*$/, <URLIN> );
        close( URLIN );
    }

    if( defined $date ) {
        # from http://ahinea.com/en/tech/accented-translate.html
        # 2011.12.10
        use Unicode::Normalize;
        for (($date)) {
            $_ = NFD($_);
            s/\pM//g;

            # additional normalizations:

            s/\x{00df}/ss/g;  ##  German beta “ß” -> “ss”
            s/\x{00c6}/AE/g;  ##  Æ
            s/\x{00e6}/ae/g;  ##  æ
            s/\x{0132}/IJ/g;  ##  Ĳ
            s/\x{0133}/ij/g;  ##  ĳ
            s/\x{0152}/Oe/g;  ##  Œ
            s/\x{0153}/oe/g;  ##  œ

            tr/\x{00d0}\x{0110}\x{00f0}\x{0111}\x{0126}\x{0127}/DDddHh/; # ÐĐðđĦħ
            tr/\x{0131}\x{0138}\x{013f}\x{0141}\x{0140}\x{0142}/ikLLll/; # ıĸĿŁŀł
            tr/\x{014a}\x{0149}\x{014b}\x{00d8}\x{00f8}\x{017f}/NnnOos/; # ŊŉŋØøſ
            tr/\x{00de}\x{0166}\x{00fe}\x{0167}/TTtt/;                   # ÞŦþŧ

            # clear everything else:
            s/[^\0-\x80]//g;
        }
    }

    my $filebase = basename( $filename );

    if( $filebase =~ /^(\d{4})_(\w+)_(\d+)\w*\.(\w+)$/ ) {
        ($year, $author, $page, $filetype ) = ($1, $2, $3, $4);
    } elsif( $filebase =~ /^(\d{4})_(\w+).*\.(\w+)$/ ) {
        ($year, $author, $filetype ) = ($1, $2, $3);
    } else {
        my ($filename, $directories, $suffix) =
            fileparse( $filename, ".ps.*", ".pdf", ".dvi.*",
                       ".od.?", ".odp", ".doc", ".ppt" );
        $title = $filename;
    }

    if( $filename =~ m|/| ) {
        my @path = split( "/", $filename );
        pop( @path );
        $keywords = join ( ", ", grep !/\./, @path );
        $keywords = undef if $keywords eq "";
    }

    my $bibkey = "x";
    if( defined $author and defined $year ) {
        $bibkey = $author . $year;
    }

    local $\ = "\n";
    print "\@ARTICLE{$bibkey,";
    print "    author = {$author}," if defined $author;
    print "    title = {$title}," if defined $title;
    print "    year = {$year}," if defined $year;
    print "    pages = {$page}," if defined $page;
    print "    keywords = {$keywords}," if defined $keywords;
    print "    file = {:$filename:$filetype},";
    print "    url = {$url}," if defined $url;
    print "    owner = {$ENV{USER}},";
    print "    timestamp = {" . $date . "}";
    print "}\n";
}
