#!/bin/sh
#!perl  -w
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------
#$Author: grazulis $
#$Date: 1998/07/10 18:05:27 $ 
#$Header:
#$Locker: grazulis $
#$Log: tardirs,v $
# Revision 1.3  1998/07/10  18:05:27  grazulis
# bug fix: now directories with links are processed correctly
#
# Revision 1.2  1998/07/10  13:30:35  grazulis
# directories listed in the order they are on the tape
# file count not incremented for directories
#
# Revision 1.1  1998/07/09  15:18:02  grazulis
# Initial revision
#
#$Revision: 1.3 $
#$Source: /kaefer/u05/grazulis/src/scripts/lists/RCS/tardirs,v $
#$State: Exp $
#------------------------------------------------------------------------
#*
# Make directory table from the tar tape listing (produced with 'tar tv'
# command). Lists just the top-level directories (you can choose to
# which level) and how many files does the direcry have
#**

use strict;
use SOptions;
use SUsage;

my $dir_level = 1;

@ARGV = getOptions(
    #** OPTIONS:
    #**  -l, --level <n>     display directories to the level <n>
    #**  --help, --usage     print short usage message (this message) and exit

    "-l,--level"      => \$dir_level,
    "--help,--usage"  => sub { SUsage::usage(); exit() }
);

my %dirs = ();
my @dirlist = ();

while(<>) {
    chomp;
    my @line = split( " ", $_, 8 );
    my @filepath = split( "/", $line[-1] );
    my $count = 1;
    my $path = "";
    if( /^d/ ) {
        foreach ( @filepath ) {
            last if $count++ > $dir_level;
            $path .= "$_/";
            if( ! defined $dirs{$path} ) {
                push( @dirlist, $path );
                $dirs{$path}{filecount} = 0;
                $dirs{$path}{dircount} = 0;
                $dirs{$path}{timedate} = [ @line[3..6] ];
            } else {
                ## $dirs{$path}{filecount} ++;
                $dirs{$path}{dircount} ++;
            }
        }
        # if the directory appears in the listing _after_ the files
        # that are in it, set its timedate correctly:
        $path = join( "/", @filepath ) . "/";
        $dirs{$path}{timedate} = [ @line[3..6] ];
    } elsif(/^-[^-]/) {
        pop( @filepath );
        foreach ( @filepath ) {
            last if $count++ > $dir_level;
            $path .= "$_/";
            if( ! defined $dirs{$path} ) {
                push( @dirlist, $path );
                $dirs{$path}{filecount} = 0;
                $dirs{$path}{dircount} = 0;
                $dirs{$path}{timedate} = [ @line[3..6] ];
            } else {
                $dirs{$path}{filecount} ++;
            }
        }
    }
}

my $max = 0;

my $key;
foreach $key ( @dirlist ) {
    $max = length($key) if( length($key) > $max );
}

foreach $key ( @dirlist ) {
    printf "%-${max}s %3s %2d %5s %4s %7d %5d\n",
           $key, @{$dirs{$key}{timedate}},
           $dirs{$key}{filecount}, $dirs{$key}{dircount};
}
