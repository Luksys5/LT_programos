#! /bin/sh
#------------------------------------------------------------------------------
#$Author: saulius $
#$Date: 2004/09/16 12:56:06 $ 
#$Locker: saulius $
#$Revision: 1.4 $
#$Source: /home/saulius/src/scripts/RCS/co-pdb,v $
#$State: Exp $
#------------------------------------------------------------------------------
#*
#   Extract revision of the .pdb file from the RCS repository (,v file).
#   Convert log messages into PDB remarks.
#**

ID='$Id: co-pdb,v 1.4 2004/09/16 12:56:06 saulius Exp saulius $'

set -ue

REVISION=""
DEBUG=.false.
VERBOSE=.true.
SCRIPT=.false.
OUTPUT=""
PDB_FILE=""

while [ $# -gt 0 ]
do
#** OPTIONS:
#**  -o, --output out.pdb     write output to the file 'out.pdb'
#**                           (default: output file name is tha same as
#**                           the basename of the RCS file)
#**  -q, --quiet,             do not print any messages, only report errors
#**      --not-verbose
#**  -r, --revision 1.23      extract revision 1.23
#**                           (default: extract latest revision)
#**  -v, --verbose            print shell commands when extracting file
#**  --version                print program version and exit
#**  --debug                  trace shell commands that prepare extraction
#**  --script                 do not run any commands, print commnds to STDOUT
#**  --help                   print short help message (this message) and exit

    OPTION=$1
    case $OPTION in
	-r|--revision|--revisio|--revisi|--revis|--revi|--rev|--re|--r)
	    REVISION="$2"
            shift
	    ;;
	-o|--output|--outpu|--outp|--out|--ou|--o)
	    OUTPUT="$2"
            shift
            ;;
	--ver|--ve|--v)
	    echo "$0: option '$1' is amboguous, possible options are:" >&2
	    echo "$0: --vesrion, --verbose" >&2
	    exit 1
	    ;;
	-q|--quiet|--quie|--qui|--qu|--q)
	    VERBOSE=.false.
            ;;
	-v|--verbose|--verbos|--verbo|--verb)
	    VERBOSE=.true.
            ;;
	-v-|--not-verbose|--not-verbos|--not-verbo|--not-verb)
	    VERBOSE=.false.
            ;;
	--debug|--debu|--deb|--de|--d)
	    DEBUG=.true.
	    ;;
	--version|--versio|--versi|--vers)
	    echo $ID; exit ;;
	--script|--scrip|--scri|--scr|--sc|--s)
            SCRIPT=.true.
            ;;
	--help|--hel|--he|--h)
	    echo $ID
	    echo
	    echo "Usage:"
	    echo "    `basename $0` [options] model.pdb"
	    echo "    `basename $0` [options] RCS/model.pdb,v"
            awk '/#\*/,/#\*\*/{sub("^ *#[*]?[*]?", ""); print $0}' $0
	    exit
	    ;;
        -*) echo "`basename $0`: unknown option $1"; exit 1 ;;
         *) PDB_FILE="$1"
            ;;
    esac
    shift
done

test $DEBUG = .true. && set -x

test -z "$PDB_FILE" && {
    echo "$0: Please supply name of the revision file (e.g. RCS/model.pdb,v)">&2
    echo "$0: or the name of the .pdb file (e.g. model.pdb)">&2
    echo "$0: on the command line">&2
    exit 2
}

if [ "$REVISION" = "" ]
then
    REVISION_OPT=""
    test -z "${OUTPUT}" && {
	LAST_REVISION=`rlog ${PDB_FILE} | awk '/^revision /{print $2;exit}'`
	OUTPUT="`basename $PDB_FILE ,v`"
	OUTPUT="`basename $OUTPUT .pdb`"
	OUTPUT="${OUTPUT}-${LAST_REVISION}.pdb"
    }
else
    REVISION_OPT="-r${REVISION}"
    test -z "${OUTPUT}" && {
	OUTPUT="`basename $PDB_FILE ,v`"
	OUTPUT="`basename $OUTPUT .pdb`"
	OUTPUT="${OUTPUT}-${REVISION}.pdb"
    }
fi

if [ $SCRIPT = .true. ]
then
   shell=cat
else
   shell=bash
fi

if [ $VERBOSE = .true. -a $SCRIPT = .false. ]
then
    VERBOSE_OPT="-x"
else
    VERBOSE_OPT=""
fi

$shell ${VERBOSE_OPT} <<EOF
set -ue

rlog ${REVISION_OPT} \\
    ${PDB_FILE} \\
| awk '{print "REMARK " \$0}' \\
> ${OUTPUT}

BRANCH=`rlog ${REVISION_OPT} ${PDB_FILE} | grep "^branch:" | awk '{print $2}'`

if [ "${REVISION}" = "" ]
then
    if [ "\$BRANCH" = "" ]; then
	rlog ${PDB_FILE} \\
	| head -50 \\
	| awk '{print "REMARK " \$0}' \\
	| sed -e 's/\\$//g' \\
	> ${OUTPUT}
    else
	rlog ${PDB_FILE} \\
	| awk '/^RCS file:/,/^---------/{print "REMARK " \$0}' \\
	| sed -e 's/\\$//g' \\
	> ${OUTPUT}

	echo "REMARK ..." >> ${OUTPUT}

	rlog ${PDB_FILE} \
	| awk "/^revision \${BRANCH}/,/^---------/ \\
               {print \\"REMARK \\" \\\$0}" \\
	| head -50 \\
	| sed -e 's/\\$//g' \\
	> ${OUTPUT}
    fi
else
    rlog ${PDB_FILE} \\
    | awk '/^RCS file:/,/^---------/{print "REMARK " \$0}' \\
    | sed -e 's/\\$//g' \\
    > ${OUTPUT}

    echo "REMARK ..." >> ${OUTPUT}

    rlog ${PDB_FILE} \\
    | awk '/^revision ${REVISION}/,/\$eof/ {print "REMARK " \$0}' \\
    | head -50 \\
    | sed -e 's/\\$//g' \\
    >> ${OUTPUT}
fi

co -q -p${REVISION} \\
    ${PDB_FILE} \\
>> ${OUTPUT}
EOF
