#! /bin/sh
#------------------------------------------------------------------------------
#$Author: saulius $
#$Date: 2014-06-19 11:49:21 +0300 (Kt, 19 Bir 2014) $
#$Revision: 451 $
#$URL: svn://saulius-grazulis.lt/scripts/program-version $
#------------------------------------------------------------------------------
#*
# Attempt to extract a version number idenifying the used program
#**

#** USAGE:
#**     $0 `which ls`
#**     $0 /usr/bin/gcc
#**

## set -x

ID='$Id: program-version 451 2014-06-19 08:49:21Z saulius $'

#** OPTIONS:
#**  --help               Print short help message (this message) and exit
while [ $# -gt 0 ]
do
  case $1 in
      --version|--versio|--versi|--vers|--ver|--ve|--v)
          perl -lne 'print $1, ": ", $2 if /\$(URL|Revision):\s*([^\$]*?)\s*\$/' $0 \
              | sort | uniq \
              | tr "\n" " " \
              | awk '{print}'
          exit
          ;;
      --help|--hel|--he|--h)
            awk '/#\*/,/#\*\*/ {
                    sub("^ *#[*]?[*]?", ""); \
                    gsub("\\$0","'$(basename $0)'"); \
                    print $0
                }' $0
	    exit
	    ;;      
      -*) echo "`basename $0`: unknown option $1" >&2 ; exit 1 ;;
      *)  FILES="$FILES '$1'" ;;
    esac
    shift
done

## echo ${FILES}
eval set -- "${FILES}"

echo "FORMAT\t"$(basename $0) \
    $(echo '$Revision: 451 $' | sed 's/\$//g; s/Revision: *//') \
    $(echo '$URL: svn://saulius-grazulis.lt/scripts/program-version $' | sed 's/\$//g; s/URL: *//')

for PROGRAM in "$@"
do
    if [ -f ${PROGRAM} ]
    then
        PRGFILE=${PROGRAM}
    else
        PRGFILE=$(which ${PROGRAM})
    fi

    if [ -z "${PRGFILE}" ]
    then
        echo "$0: could not find program '${PROGRAM}'" >&2
        continue
    fi

    if strings ${PRGFILE} | grep -q -- '--version' > /dev/null
    then
        echo PRGVERS"\t"${PROGRAM}"\t"$(${PROGRAM} --version 2>&1 \
            | perl -lne 'print $1 and exit if /(\d+\.[\d\._]+|Revision:[^\$]+)/')
    elif strings ${PRGFILE} | grep -q -- '-version' > /dev/null
    then
        echo PRGVERS"\t"${PROGRAM}"\t"$(${PROGRAM} -version 2>&1 \
            | perl -lne 'print $1 and exit if /(\d+\.[\d\._]+)/')
    elif strings ${PRGFILE} | grep -q -- '-showversion' > /dev/null
    then
        echo PRGVERS"\t"${PROGRAM}"\t"$(${PROGRAM} -showversion 2>&1 \
            | perl -lne 'print $1 and exit if /(\d+\.[\d\._]+)/')
    else
        echo -n PRGVERS"\t"${PROGRAM}"\t"
        strings ${PRGFILE} \
            | perl -lne 'print $1, ": ", $2 if /\$(URL|Revision):\s*([^\$]*?)\s*\$/' \
            | sort | uniq \
            | tr "\n" " " \
            | awk '{print}'
    fi
done
