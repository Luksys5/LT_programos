#!/bin/sh
#!perl  -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;

#*
# Multiply symmetry operators
#**

use strict;
use SymopAlg;
use SOptions;
use SUsage;

my $symop_file;
my $count = 0;
my ($symop,@symop);
my $result;
my $output = "";

#*USAGE:
#    symop_multiply symop1.symop symop2.symop ...
#**

#**OPTIONS:
#** -o, --output over.symop   write the symmetry operator to over.symop
#** --help, --usage           print short usage message and exit

@ARGV = getOptions(
    "-o,--output"    => \$output,
    "--help,--usage" => sub { SUsage::usage(); exit },
);

die( "$0: Please supply one or more files with symmetry operators\n".
     "on the command line\n" ) unless @ARGV;

foreach $symop_file (@ARGV){
    open(SYMOP, "$symop_file") or die( "Could not open file '$symop_file'" );
    $symop[$count] = [ map {[split]} grep !/^\s*#|^\s*$/, <SYMOP> ];
    close(SYMOP);
    $count ++;
}

$result = shift(@symop);

foreach $symop (@symop){
    $result = symop_mul($result, $symop);
}

$\ = "\n";
$, = "\t";
my $format = "%10.5f";

open( STDOUT, ">$output" ) or 
      die( "could not open file '$output' for writing: $!" ) if $output;

print map {sprintf($format,$_)} @{$result->[0]};
print map {sprintf($format,$_)} @{$result->[1]};
print map {sprintf($format,$_)} @{$result->[2]};

print "";			   
print map {sprintf($format,$_)} @{$result->[3]};


