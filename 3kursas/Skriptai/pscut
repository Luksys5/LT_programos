#!/bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------------
#$Author: grazulis $
#$Date: 2000/05/12 09:21:22 $ 
#$Locker:  $
#$Revision: 1.3 $
#$Source: /home/grazulis/src/tdb/RCS/tdbtexlist,v $
#$State: Exp $
#------------------------------------------------------------------------------
#*
# Cut a part of the PostScript picture
#**

use strict;
use PSParse;

my @newbb = ( $ARGV[0], $ARGV[1], $ARGV[0] + $ARGV[2], $ARGV[1] + $ARGV[3] );
my $file1 = defined $ARGV[4] ? $ARGV[4] : "-";

#------------------------------------------------------------------------------

my $ps1 = PSParse::readps( $file1 );

if( ! defined $ps1->{header} ) {
    die( "PostScript file '$ps1->{filename}' ".
	 "does not conform 'PS-Adobe-3.0' DSC" );
}

if( ! defined $ps1->{BoundingBox} ) {
    die( "There is no %%BoundingBox specified ".
	 "in the EPS file '$ps1->{filename}'" );
}

#------------------------------------------------------------------------------

my @bb1 = split( " ", $ps1->{BoundingBox} );

print "%!PS-Adobe-3.0 EPSF-3.0\n";
print "%%BoundingBox: $newbb[0] $newbb[1] $newbb[2] $newbb[3]\n";
print "%%EndComments\n";

print "%%BeginProlog\n";
print @{$ps1->{prolog}};
print "%%EndProlog\n";
print "%%BeginSetup\n";
print @{$ps1->{setup}};
print "%%EndSetup\n";

print "save\n";
print "gsave\n";
print "$newbb[0] $newbb[1] moveto\n";
print "$newbb[2] $newbb[1] lineto\n";
print "$newbb[2] $newbb[3] lineto\n";
print "$newbb[0] $newbb[3] lineto\n";
print "closepath clip newpath\n";
print @{$ps1->{text}};
print "grestore\n";
print "restore\n";

print "showpage\n";
print "%%Trailer\n";
print @{$ps1->{trailer}};
print "%%EOF\n";
