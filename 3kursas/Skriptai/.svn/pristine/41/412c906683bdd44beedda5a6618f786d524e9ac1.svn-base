#!/bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------
#$Author: grazulis $
#$Date: 2000/05/12 09:21:22 $ 
#$Locker:  $
#$Revision: 1.3 $
#$Source: /home/grazulis/src/tdb/RCS/tdbtexlist,v $
#$State: Exp $
#------------------------------------------------------------------------
#*
# Overlay two PostScript (PS or EPS) files
#**

use strict;
use PSParse;

my ($file1, $file2) = @ARGV;

#------------------------------------------------------------------------------

my $ps1 = PSParse::readps( $file1 );
my $ps2 = PSParse::readps( $file2 );

if( ! defined $ps1->{header} ) {
    die( "PostScript file '$ps1->{filename}' ".
	 "does not conform 'PS-Adobe-3.0' DSC" );
}

if( ! defined $ps2->{header} ) {
    die( "PostScript file '$ps2->{filename}' ".
	 "does not conform 'PS-Adobe-3.0' DSC" );
}

if( ! defined $ps1->{BoundingBox} ) {
    die( "There is no %%BoundingBox specified ".
	 "in the EPS file '$ps1->{filename}'" );
}

if( ! defined $ps2->{BoundingBox} ) {
    die( "There is no %%BoundingBox specified ".
	 "in the EPS file '$ps2->{filename}'" );
}

print STDERR "$file1:\n";
print STDERR "prolog:  ", scalar(@{$ps1->{prolog}}), "\n";
print STDERR "setup:   ", scalar(@{$ps1->{setup}}), "\n";
print STDERR "text:    ", scalar(@{$ps1->{text}}), "\n";
print STDERR "ignored: ", scalar(@{$ps1->{ignored}}), "\n";
print STDERR "trailer: ", scalar(@{$ps1->{trailer}}), "\n";
print STDERR "\n";

print STDERR "$file2:\n";
print STDERR "prolog:  ", scalar(@{$ps2->{prolog}}), "\n";
print STDERR "setup:   ", scalar(@{$ps2->{setup}}), "\n";
print STDERR "text:    ", scalar(@{$ps2->{text}}), "\n";
print STDERR "ignored: ", scalar(@{$ps2->{ignored}}), "\n";
print STDERR "trailer: ", scalar(@{$ps2->{trailer}}), "\n";

#------------------------------------------------------------------------------

my @bb1 = split( " ", $ps1->{BoundingBox} );
my @bb2 = split( " ", $ps2->{BoundingBox} );

print "%!PS-Adobe-3.0 EPSF-3.0\n";
print "%%BoundingBox: ", $ps1->{BoundingBox}, "\n";;
print "%%EndComments\n";

print "%%BeginProlog\n";
print @{$ps1->{prolog}};
print "%%EndProlog\n";
print "%%BeginSetup\n";
print @{$ps1->{setup}};
print "%%EndSetup\n";
print @{$ps1->{text}};

print "save\n";
print "gsave\n";
print "$bb1[0] $bb1[1] translate\n";
print "$bb1[0] $bb1[2] sub $bb2[0] $bb2[2] sub div\n";
print "$bb1[1] $bb1[3] sub $bb2[1] $bb2[3] sub div scale\n";
print "$bb2[0] neg $bb2[1] neg translate\n";
print "%%BeginDocument: $ps2->{filename}\n";
print @{$ps2->{prolog}};
print @{$ps2->{setup}};
print grep !/gsave [\w\.]+ (setgray )?fill grestore/, @{$ps2->{text}};
print "%%EndDocument\n";
print "grestore\n";
print "restore\n";

print "showpage\n";
print "%%Trailer\n";
print @{$ps1->{trailer}};
print @{$ps2->{trailer}};
print "%%EOF\n";
