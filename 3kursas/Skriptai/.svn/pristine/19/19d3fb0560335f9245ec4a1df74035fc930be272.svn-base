#! /bin/sh
#------------------------------------------------------------------------------
#$Author$
#$Date$ 
#$Revision$
#$URL$
#------------------------------------------------------------------------------
#*
# SVN command line client wrapper that sets svn:text-time property.
# 
# Usage: $0 ci
#        $0 co
#        $0 up
#        $0 <svn-subcommand>
#        $0 --wrapper-otions <svn-subcommand> --svn-options
#        $0 --help
#**

TMP_DIR="${tmp}"

set -ue
## set -x

script() { echo "# $*"; cat; }
setvar() { eval $1="'$3'"; }

setvar Id = '$Id$'

setvar svn = /usr/bin/svn

setvar FILES = ""
setvar DIRS  = ""

setvar BASENAME = "`basename $0`"

setvar X_OPTION = ""
setvar VERBOSE  = false
setvar HELP = ""

#** WRAPPER $0 OPTIONS:
#**  --debug           Switch OM 'set -x' in the $0 script
#**  --no-debug        Switch OFF 'set -x' in the $0 script
#**  -v, --verbose     Be verbose, print out comands when executed
#**  -s, --silent      Be silent
#**  -V, --version     Print out $0 script version and exit
#**  --help            Print short help message (this message) and exit
#**
while [ $# -gt 0 ]
do
  case $1 in
      --debug|--debu|--deb|--de|--d)
          set -x;
          ;;
      --no-debug|--no-debu|--no-deb|--no-de|--no-d)
          set +x;
          ;;
      --help|--hel|--he|--h)
            awk '/#\*/,/#\*\*/ {
                    sub("^ *#[*]?[*]?", ""); \
                    gsub("\\$0","'$(basename $0)'"); \
                    print $0
                }' $0
            echo "$(basename $0): and here is the help " \
                "from the original ${svn}:\n"
            ${svn} help
	    exit
	    ;;
      -v|--verbose|--verbos|--verbo|--verb)
          X_OPTION='x'
          VERBOSE=true
          ;;
      -s|--no-verbose|--no-verbos|--no-verbo|--no-verb|\
      --silent|--silen|--sile|--sil|--si|--s)
          X_OPTION=''
          VERBOSE=false
          ;;
      -V|--version|--versio|--versi|--vers)
          echo $Id
          echo "$0: and here is the version of the underlying ${svn}:"
          ${svn} --version
          exit
          ;;
      -*) echo "$0: unknown option '$1'" >&2
          exit 1
	  ;;
      # The first non-option argument directs all other options to 
      # the underlying svn implementation:
      *)  FILES="$FILES '$1'"
          case "$1" in
              --help) HELP="--help" ;;
              ..) DIRS="${DIRS} '$1'" ;;
              ..|../*|/*) DIRS="${DIRS} '$1'" ;;
          esac
          shift
          while [ $# -gt 0 ]
          do
              FILES="$FILES '$1'"
              case "$1" in
                  --help) HELP="--help" ;;
                  ..) DIRS="${DIRS} '$1'" ;;
                  ..|../*|/*) DIRS="${DIRS} '$1'" ;;
              esac
              shift
          done
          break
          ;;
    esac
    shift
done

## echo ${FILES}
eval set -- "${FILES}"

if [ $# -lt 1 ]
then
    echo "$(basename $0): please specify an svn subcommand" \
        "on the command line" >&2
    echo "$(basename $0): try '$(basename $0) --help'" \
        "for instructions" >&2
    exit
fi

COMMAND="$1"

## test -z "${TMP_DIR}" && TMP_DIR="/tmp"
## TMP_DIR="${TMP_DIR}/tmp-${BASENAME}-$$"
## mkdir "${TMP_DIR}"

test ${VERBOSE} = true && set -x

if [ "${HELP}" != "" ]
then
    ${svn} ${1+"$@"}
    exit $?
fi

case "${COMMAND}" in
    up|update|\
    co|checkout)
        ${svn} ${1+"$@"} \
        | tee /dev/tty \
        | egrep -v "^(Checked out revision|At revision|\
Updated to revision|Performing status on external item|\
Updated external to revision|Fetching external item|\
External at revision) " \
        | sed -e "s/^Restored '\\(.*\\)'/\\1/" \
        | sed -e 's/^ *[?!A-Z] *//' \
        | awk '{printf "%s\0", $0}' \
        | xargs -0 -i \
            sh -${X_OPTION}c '
                svn_time=`'${svn}' proplist -v "{}" \
                | awk "/svn:text-time/{getline; print \\\$1}" \
                | sed -e "s/Z\\\$//; s/T/ /"`

                test -n "${svn_time}" && TZ=UTC touch --date="${svn_time}" "{}"
            '
        ;;
    ci|checkin)
        eval set -- "${DIRS}"
        ${svn} st ${1+"$@"} \
        | sed -e 's/^ *[?!A-Z] *//' \
        | awk '{printf "%s\0", $0}' \
        | xargs -0 -i \
            sh -${X_OPTION}c '
                if [ ! -e "{}" ]
                then
                    exit
                fi

                if ! '${svn}' proplist "{}" | grep -q svn:text-time > /dev/null
                then 
                    exit
                fi

                ls_longtime=`(
	            TZ=UTC ls -ld --time-style="+%Y-%m-%dT%H:%M:%S" "{}" \
                    | awk "{print \\\$6}" )`

                ls_microseconds=`(
	            TZ=UTC ls -ld --time-style="+%N" "{}" \
                    | awk "{printf \"%06d\n\", \\\$6/1000}" )`

                ls_time="${ls_longtime}.${ls_microseconds}Z"

                '${svn}' propset svn:text-time "${ls_time}" "{}"
            '

        eval set -- "${FILES}"
        ${svn} ${1+"$@"}
        ;;
    *) # Forward all unkown functionality to the SVN client:
        ${svn} ${1+"$@"}
        ;;
esac

## rm -rf "${TMP_DIR}"
