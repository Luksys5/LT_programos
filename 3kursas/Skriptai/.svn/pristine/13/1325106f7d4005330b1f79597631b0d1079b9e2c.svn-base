#!/bin/sh
#------------------------------------------------------------------------------
#$Author$
#$Date$
#$Revision$
#$URL$
#------------------------------------------------------------------------------
#*
# Rename papers (PDF files) specified on the command line using the
# Year_Author_Page.pdf convention.
#
# Usage: $0 --options *.pdf
#**

set -u

ID='$Id$'

VIEWERS="kpdf okular evince acroread"

BIBTEX_FILE=""

FILES=""

SCRIPT=false

#** OPTIONS:
#**  -v, --viewers "kpdf okular evince acroread"
#**      Specify viewers to be used for display PDF, in preference order
#**
#**  --help                   print short help message (this message) and exit
while [ $# -gt 0 ]
do
  case $1 in
      -b|--bibtex-file|--bibtex-fil|--bibtex-fi|--bibtex-f|--bibtex|\
      --bibtex|--bibte|--bibt|--bib|--bi|--b)
          BIBTEX_FILE="$2"
          shift
          ;;
      -v|--viewers|--viewer|--viewe|--view|--vie|--vi|--)
          VIEWERS="$2"
          shift
          ;;
      --script|--scrip|--scri|--scr|--sc|--s)
          SCRIPT=true
          ;;
      --help|--hel|--he|--h)
            awk '/#\*/,/#\*\*/ {
                    sub("^ *#[*]?[*]?", ""); \
                    gsub("\\$0","'$(basename $0)'"); \
                    print $0
                }' $0
	    exit
	    ;;      
      -*) echo "`basename $0`: unknown option '$1'" >&2 ; exit 1 ;;
      *)  FILES="$FILES '$1'" ;;
    esac
    shift
done

## echo ${FILES}
eval set -- "${FILES}"

pdfviewer=""
odtviewer="libreoffice"
warviewer="libreoffice"

for command in ${VIEWERS}
do
    pdfviewer=$(which ${command})
    if [ -n "${pdfviewer}" ]
    then
        break
    fi
done

if [ -z "${pdfviewer}" ]
then
    echo "$0: could not find a suitable PDF viewer" \
    "(looked for: ${VIEWERS})" >&2
    exit 1
fi

set -u

for i in ${1+"$@"}
do
    echo === "$i" ===

    EXT="pdf"
    case "$i" in
        *.ps) EXT="ps" ;;
        *.ps.gz) EXT="ps.gz" ;;
        *.war) EXT="war" ;;
        *.odt) EXT="odt" ;;
        *.odp) EXT="odp" ;;
        *.doc) EXT="doc" ;;
        *.ppt) EXT="ppt" ;;
        *.docx) EXT="docx" ;;
        *.html) EXT="html" ;;
        *.htm) EXT="htm" ;;
    esac

    case ${EXT} in
        ps|ps.*|pdf)
            ${pdfviewer} "$i" > /dev/null 2>&1 & ;;
        odt|odp|ods|doc|docx|ppt)
            ${odtviewer} "$i" > /dev/null 2>&1 & ;;
        war|html|htm)
            ${warviewer} "$i" > /dev/null 2>&1 & ;;
    esac
    PID=$!

    REENTER=y

    while [ "${REENTER}" != n ]
    do

	read -p "Enter first author: " AUTHOR
	read -p "Enter year: " YEAR
	read -p "Enter page: " PAGE

        DIR="$(dirname "$i")"
        if [ -n "${PAGE}" ]
        then
	    NEW_NAME="$DIR/${YEAR}_${AUTHOR}_${PAGE}.${EXT}"
        else
            NEW_NAME="$DIR/${YEAR}_${AUTHOR}.${EXT}"
        fi

	read -p "Rename to ${NEW_NAME} ? [Y/n]" ANSWER

	if [ "${ANSWER}" != n ]
	then
            if [ $SCRIPT = true ]
            then
                echo "# would have executed the following commands" \
                     "with '--run':"
                if [ -n "$BIBTEX_FILE" ]
                then
                    echo perl -i -pe "s|${i}|${NEW_NAME}|g" "$BIBTEX_FILE"
                fi
	        echo svn mv "$i" "${NEW_NAME}"
	        echo svn ci -m "$(echo "Renaming '$(basename "$i")' to '$(basename "${NEW_NAME}")'\n")"
            else
                if [ -n "$BIBTEX_FILE" ]
                then
                    perl -i -pe "s|${i}|${NEW_NAME}|g" "$BIBTEX_FILE"
                fi
	        svn mv "$i" "${NEW_NAME}"
	        svn ci -m "$(echo "Renaming '$(basename "$i")'" "to '$(basename "${NEW_NAME}")'\n")"
            fi
	    REENTER=n
	else
	    read -p "Reenter ? [Y/n]" REENTER
	fi
    done

    kill $PID

done

if [ -n "$BIBTEX_FILE" ]
then
    svn ci "$BIBTEX_FILE" -m "Syncronising '$BIBTEX_FILE'."
fi
