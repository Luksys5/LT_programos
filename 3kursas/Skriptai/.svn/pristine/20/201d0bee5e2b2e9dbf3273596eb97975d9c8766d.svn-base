#!/bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------
#$Author: grazulis $
#$Date: 2000/05/12 09:21:22 $ 
#$Locker:  $
#$Revision: 1.3 $
#$Source: /home/grazulis/src/tdb/RCS/tdbtexlist,v $
#$State: Exp $
#------------------------------------------------------------------------
#*
# Produce a LaTeX-formated list from a tagged literature database 
#**

use strict;

my @articles = ();
my $new_article = 0;
my @preamble = ();
my @commands = ();

while(<>) {
    if( /^\s*#=?TEX_(COMMAND|PREAMBLE)/ ) {
       chomp;
       my ($kwd, $text) = split( " ", $_, 2 );
       push( @commands, $text ) if /^\s*#=?TEX_COMMAND/;
       push( @preamble, $text ) if /^\s*#=?TEX_PREAMBLE/;
       next;
    }
    if( /^\s*#=/ ) { s/^(\s*)#/$1%/; print; next }
    if( /^\s*#/ ) { next }
    if( /^\s*$/ ) {
	if( $new_article ) {
	    push( @articles, {} );
	    $new_article = 0;
	}
	next;
    }
    $new_article = 1;
    if( !@articles ) { @articles = ({}) }
    chomp;
    my ($key, $value) = split( " ", $_, 2 );
    ## $value =~ s/([^\\])\$/$1\\\$/g;
    ## $value =~ s/^\$/\\\$/g;
    $value =~ s/([^\\])&/$1\\&/g;
    $value =~ s/([^\\])%/$1\\%/g;
    $value =~ s/^&/\\&/g;
    $value =~ s/^%/\\%/g;
    if( $key eq "AU" ) {
	$articles[-1]{$key} = !defined $articles[-1]{$key} ?
	    $value : "$articles[-1]{$key}; $value";
    } else {
	$articles[-1]{$key} = !defined $articles[-1]{$key} ?
	    $value : "$articles[-1]{$key} $value";
    }
}

pop( @articles ) if $new_article == 0;

print<<'EOF';
\documentclass{article}
\usepackage{a4}
\parindent 0pt
\parskip 5pt
EOF

for (@preamble) { print "$_\n" }

print<<'EOF';
\begin{document}

EOF

for (@commands) {
    print "$_\n";
}
print "\n" if @commands;

for(@articles) {
    print "\\samepage{\n";
    print "[$_->{NR}]\n";
    print "$_->{AU}\n";
    print "{\\bf $_->{TI}}\n";
    print "{\\em $_->{JO}\\/}\n";
    print "{\\bf $_->{VO}}" if $_->{VO};
    print "($_->{NO})" if $_->{NO};
    print ":$_->{PA}"  if $_->{PA};
    print ", $_->{YE}" if $_->{YE};
    print " $_->{MO}"  if $_->{MO};
    print "\n}\n";
    print "\n";
}

print <<'EOF';
\end{document}
EOF
