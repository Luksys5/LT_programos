#!/bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------
#$Author: grazulis $
#$Date: 2000/05/12 09:21:22 $ 
#$Locker:  $
#$Revision: 1.3 $
#$Source: /home/grazulis/src/tdb/RCS/tdbtexlist,v $
#$State: Exp $
#------------------------------------------------------------------------
#*
# Copy a PostScript file and try to adapt it to Adobe 3.0 DSC
# (Document Structuring Conventions)
#**

use strict;
use PSParse;

my $file = shift( @ARGV );

#------------------------------------------------------------------------------

my $ps = PSParse::readps( $file );

if( ! defined $ps->{header} ) {
    die( "PostScript file '$ps->{filename}' ".
	 "does not conform 'PS-Adobe-3.0' DSC" );
}

if( ! defined $ps->{BoundingBox} ) {
    warn( "There is no %%BoundingBox specified ".
	  "in the EPS file '$ps->{filename}'" );
}

print STDERR "$file:\n";
print STDERR "prolog:  ", scalar(@{$ps->{prolog}}), "\n";
print STDERR "setup:   ", scalar(@{$ps->{setup}}), "\n";
print STDERR "text:    ", scalar(@{$ps->{text}}), "\n";
print STDERR "ignored: ", scalar(@{$ps->{ignored}}), "\n";
print STDERR "trailer: ", scalar(@{$ps->{trailer}}), "\n";
print STDERR "\n";

#------------------------------------------------------------------------------

my @bb = split( " ", $ps->{BoundingBox} );

$" = " ";

print "%!PS-Adobe-3.0 EPSF-3.0\n";
print "%%BoundingBox: @bb\n";
print "%%EndComments\n";
print "%%BeginProlog\n";
print @{$ps->{prolog}};
print "%%EndProlog\n";
print "%%BeginSetup\n";
print @{$ps->{setup}};
print "%%EndSetup\n";
print @{$ps->{text}};
print "%%Trailer\n";
print @{$ps->{trailer}};
print "%%EOF\n";
