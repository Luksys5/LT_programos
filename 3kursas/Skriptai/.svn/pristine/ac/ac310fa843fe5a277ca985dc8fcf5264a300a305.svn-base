#!/usr/bin/perl -w

use strict;

my $length;

$length = shift(@ARGV) if $ARGV[0] =~ /\d+/;

## $length *= 44100*4 if defined $length;

unshift( @ARGV, "-" ) unless @ARGV;

if( !defined $length ) {
    $length = 0;
    my $filename;
    for $filename (@ARGV) {
    	open(FILE,"$filename") or die("could not open '$filename': $!");
    	if( !seek( FILE, 0, 2 )) {
    	    die("file '$filename' is not seekable -- ".
    		"cannot determine sound streem length");
    	}
    	$length += tell(FILE);
    	close(FILE);
    }
}

# RIFF
# LENGTH 635040036
# WAVE
# fmt 
# LENGTH 16
# FORMAT          1
# CHANNELS        2
# SAMPLES         44100
# BYTES_PER_SEC   176400
# ALIGN           4
# BITS_PER_SAMPLE 16
# data
# LENGTH 635040000

my @header = (
    "RIFF", $length + 36, "WAVE",
    "fmt ", 16, 1, 2, 44100, 176400, 4, 16,
    "data", $length
);

my $header = pack( "a4Va4a4VvvVVvva4V", @header );
syswrite( STDOUT, $header, length( $header ));

sub min { $_[0] < $_[1] ? $_[0] : $_[1] }

my $buffersz = 16 * 1024;
my $rawfile;
for $rawfile (@ARGV) {
    open( RAW, "$rawfile" ) or die( "can't open file '$rawfile': $!" );

    my $words = $buffersz / 2;
    my $data = "";
    my $datasz = 0;
    my $total_data = 0;

    while( $length > 0 and $datasz = read( RAW, $data, min($buffersz,$length)) ) {
	$words = $datasz / 2;
	$data = pack( "v$words", unpack( "n$words", $data ));
	syswrite( STDOUT, $data, $datasz );
	$total_data += $datasz;
	$length -= $datasz;
    }

    print STDERR "# amount of data written $total_data\n";

    close( RAW );
}
