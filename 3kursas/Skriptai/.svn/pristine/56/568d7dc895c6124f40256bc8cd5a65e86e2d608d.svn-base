#! /bin/sh
#!perl -w # --*- Perl -*--
eval 'exec perl -x $0 ${1+"$@"}'
    if 0;
#------------------------------------------------------------------------------
#$Author:$
#$Date:$ 
#$Locker:$
#$Revision:$
#$Source:$
#$State:$
#------------------------------------------------------------------------------
#*
#  Check water molecules in the curated file against the deposited
#  original
#**

use strict;
use PDB;
use SymopAlg;
use Symmetry;

my @symop_strings = map {
    chomp;
    s/[\'\s]//g;
    s/,/, /g;
    lc($_)
} <>;

do {
    my $n = 0;
    for (@symop_strings) {
	print "#Symop $n: $_\n";
	$n ++;
    }
    print "#\n";
};

my @symops;

#
# Parse symmetry operators and convert them to matrices:
#

for my $symop (@symop_strings) {
    my @symop_rows = map { s/\s//g; $_ } split( ",", $symop );
    my @symop_matrix = ([1,0,0],[0,1,0],[0,0,1]);
    my @symop_translation = (0,0,0);

    my $i = 0;
    for my $row_description (@symop_rows) {
	my $j = 0;
	for my $letter ( "x", "y", "z" ) {
	    my ( $sign, $coef ) = ( 0, 0 );
	    if( $row_description =~ /([-+]?)([0-9]*)$letter/ ) {
		$sign = $1 eq "-" ? -1 : +1;
		$coef = $2 eq "" ? 1.0 : $2;
	    }
	    $symop_matrix[$i][$j] = $sign * $coef;
	    $j ++;
	}
	if( $row_description =~ /([-+]?)([.\/0-9]+)/ ) {
	    my $sign = defined $1 ? ($1 eq "-" ? -1 : +1) : +1;
	    my $coef = $2;
	    if( $coef =~ /([.0-9]+)\/([.0-9]+)/ ) {
		$coef = $1 / $2;
	    }
	    my $translation =  $sign * $coef;
	    $symop_translation[$i] = $translation;
	}
	$i ++;
    }
    push( @symop_matrix, [@symop_translation] );
    push( @symops, [@symop_matrix] );
}

do {
    my $n = 0;
    for my $matrix (@symops) {
	print "#SYMOP $n: $symop_strings[$n]\n";
	for my $i (0..2) {
	    print "#ROTATION $n($i): @{$matrix->[$i]}\n";
	}
	print "#TRANSLATION $n: @{$matrix->[3]}\n";
	print "#DETERMINANT $n: ", SymopAlg::symop_det($matrix), "\n#\n";
	$n ++;
    }
};
