#!/bin/sh
#-----------------------------------------------------------------------
#  CCP4 control script - ccp2xmap
#-----------------------------------------------------------------------
#$Author: grazulis $
#$Date: 1996/10/01 15:51:15 $
#$Header:
#$Locker: grazulis $
#$Revision: 1.3 $
#$Source: /kaefer/u05/grazulis/src/CCE/ccp4/RCS/ccp2Omap,v $
#$State: Exp $
#-----------------------------------------------------------------------
#*
# Convert CCP4 format map into the XPLOR format map
#
# INPUT:
#   ccp4.map  - CCP4 map to be normalised and converted
#
# OUTPUT:
#   ccp4.xmap - XPLOR format map
#**
#-----------------------------------------------------------------------
#set -v 
#set -x

set -e
set -u

mk_inp() { echo "# $*"; cat; }
setvar() { eval $1="'$3'"; }

setvar Id = '$Id:  $'

setvar INPUT_MAP   = ""
setvar OUTPUT_FILE = ""
setvar SCRIPT      = false

# 'mapman' parameters for finding bones -- dont' ask me what they mean :-(

setvar BASE      = 1.5
setvar STEP      = 0.5
setvar NR_SPARES = 100
setvar MC        =  10

#------------------------------------------------------------------------
# executables

setvar mapman = mapman

#-----------------------------------------------------------------------
# process command line

set +u

while [ "$1" != "" ]
do
#** OPTIONS:
#**  -o, --output    set the name of the output map
#**  --help          print short help message (this message) and exit
#**  --script        do not run mapman, print its input to STDOUT
#**  --version       print script version and exit

    OPTION=$1
    case $OPTION in
        -o|--output|--outpu|--outp|--out|--ou|--o)
            shift; setvar OUTPUT_FILE = "$1" ;;
	--help|--hel|--he|--h)
	    echo $Id
	    echo
	    echo "Usage:"
	    echo "    `basename $0` [options] ccp4.map"
            gawk '/#\*/,/#\*\*/{sub("^ *#[*]?[*]?", ""); print $0}' $0
	    exit
	    ;;
	--version|--versio|--versi|--vers|--ver|--ve|--v)
	    echo $Id
	    exit
	    ;;
	--script|--scrip|--scri|--scr|--sc|--s)
            setvar SCRIPT  = true
            setvar mapman  = 'mk_inp mapman'
            ;;
        -*) echo "`basename $0`: unknown option $1"; exit 1 ;;
         *) INPUT_MAP="$1" ;;
    esac
    shift
done

#------------------------------------------------------------------------------
# determine output file names

test -z "${OUTPUT_FILE}" && {
    setvar OUTPUT_FILE = "`basename ${INPUT_MAP} .map`.xmap"
}

#------------------------------------------------------------------------------

${mapman} <<- EOF-mapman
	read       m1 ${INPUT_MAP} CCP4
	normalise  m1
	write      m1 ${OUTPUT_FILE} XPLOR
	quit
	y
	EOF-mapman
