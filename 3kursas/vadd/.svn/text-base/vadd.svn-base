#!/usr/bin/perl
#-------------------------------
#$Author: Lukas_Tutkus $
#$Date: 2015-02-23 21:04:05 +0200 (Pr, 23 Vas 2015) $
#$Revision: 54 $
#$URL: svn://saulius-grazulis.lt/praktikos-darbai-2015/Lukas_Tutkus/trunk/vaddfiles $
#$Id: vaddfiles 156 2015-03-24 09:13:58Z Lukas_Tutkus $
#-------------------------------
#*
#	Perl script which reads input and calculates sum of vectors and outputs it to STDOUT.
#*

##Subroutine for checking if value is numeric.
use Scalar::Util qw(looks_like_number);

use strict;
use warnings;

my $Master = '#$Id: vaddfiles 156 2015-03-24 09:13:58Z Lukas_Tutkus $'."\n";
print $Master;

my $fname = @ARGV > 0 ? shift(@ARGV) : "-";
open my $fh, $fname or die "Dying becouse can't open file: $fname $!".lcfirst($!);
my ($size, $ndsize, $line, $ndline);
my ($count, $which) = 0;
my (@vect, @ndvect);

## Reading from file
while( <$fh> ) {
	chomp;
	next if /^\s*$/ || /^\#/;
	$line = $_;
	last if !defined $line;
	do{
		$ndline = <$fh>;
		chomp($ndline);
	}while(defined $ndline && $ndline =~ /^#|^\s*$/);

	if(!defined $ndline){
		die "Nelyginis komponenčių skaičius";
	} 
	@vect = split(' ', $line);
	@ndvect = split(' ', $ndline);
	$size = @vect; $ndsize = @ndvect;
	if($size != $ndsize){ 
		die "Skirtingas vektorių skaičius";
	}
	while($count < $size){ 
		if(!looks_like_number($vect[$count]) 
		|| !looks_like_number($ndvect[$count])){
			die "skaičius neatitinka Perl skaičiaus sintaksės";
		}       
		print $vect[$count]." ".$ndvect[$count]." ";
		print ($vect[$count]+$ndvect[$count]);
		print "\n";
		$count += 1;
	} 	
}
