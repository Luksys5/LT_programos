#!/usr/bin/python
import sys
import math

def nearest(x, points):
	mindiffs = []; ppoints = []
	added = []	
	for i, p in enumerate(points):
		mindiffs.append(abs(p - x))
		added.append(i)
	for i in range(0, len(added)):
		for j in range(0, i):
			if(mindiffs[i] < mindiffs[j]):
				tempdiff = mindiffs[j]; tempadd = added[j]
				mindiffs[j] = mindiffs[i]
				mindiffs[i] = tempdiff
				added[j] = added[i]
				added[i] = tempadd

	for a in added:
		ppoints.append(points[a])
		
	return ppoints[:5]

mypoints = {}; mypoints = []; 
with open("test", 'r') as f:
	for line in f:
		number = int(line)
		mypoints.append(number)

for i in range(0, len(mypoints)):
	for j in range(0, i):
		if(mypoints[i] < mypoints[j]):
			tempx= mypoints[j];
			mypoints[j] = mypoints[i]
			mypoints[i] = tempx
		
		if(mypoints[j] == 1.0):
			mypoints[j] = int(mypoints[j])
			
N = len(mypoints)
Nkv = N*N
minx = mypoints[0]
maxx = mypoints[N-1]
for j in range(0, Nkv):
	xj = minx + (float(j-1)*(float(maxx - minx))/float(Nkv));
	five = nearest(xj, mypoints)
	L_sum = 0.0
	for i, xi in enumerate(five):
		sand = 1.0; dalb = 1.0
		for k, xk in enumerate(five):
			if(i!=k):
				sand *= float(xj-xk)
				dalb *= float(xi-xk)
		'''
		if(j == 52):
			print "sand:", sand
			print "dalb:", dalb
			print "xi:", xi
			print "fivex:", xi
			print "fivey:", math.cos(xi)
			if(dalb != 0):
				print "sand/dalb", sand/dalb
				print "sand/dalb*fx", math.cos(xi)*(sand/dalb)
			else:
				print "sand/dalb", 0
			print "Lsum:", L_sum			
			print "\n"
		'''
		if(j == 0): print sand, dalb	
		if(dalb != 0.0 or dalb != -0.0 ):
			L_sum += math.cos(xi) * (sand/dalb)
	if(j == 0): print str(L_sum)
'''
for i in range(0, len(mypoints)):
	print "x: " + str(mypoints[i]) + "\t\t" + "y: " + str(mypoints['y'][i])

'''
